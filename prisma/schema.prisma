generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id        Int             @id @default(autoincrement())
  title     String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  questions PollQuestions[] @relation("PollQuestions")

  @@map("polls")
}

model Question {
  id         Int                 @id @default(autoincrement())
  createdAt  DateTime            @default(now())
  text       String
  difficulty QuestionDifficulty?
  updatedAt  DateTime            @updatedAt
  polls      PollQuestions[]     @relation("PollQuestions")
  answers    QuestionAnswer[]    @relation("QuestionAnswers")

  @@map("questions")
}

model Answer {
  id        Int              @id @default(autoincrement())
  text      String
  isCorrect Boolean
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  questions QuestionAnswer[] @relation("QuestionAnswers")
  
  @@map("answers")
}

model QuestionAnswer {
  questionId Int
  answerId   Int
  answer     Answer   @relation("QuestionAnswers", fields: [answerId], references: [id])
  question   Question @relation("QuestionAnswers", fields: [questionId], references: [id])
  @@id([questionId, answerId])
  @@map("question_answers_table")
}

model PollQuestions {
  pollId     Int
  questionId Int
  poll       Poll     @relation("PollQuestions", fields: [pollId], references: [id])
  question   Question @relation("PollQuestions", fields: [questionId], references: [id])

  @@id([pollId, questionId])
}

model User {
  id                 String             @id @default(cuid())
  telegramId         String             @unique
  username           String             @unique
  password           String?            // For admin login
  firstName          String
  lastName           String
  age                Int
  role               UserRole           @default(STUDENT)
  verificationCode   String?            // For telegram verification
  verificationExpiry DateTime?          // Code expiry time
  registrationStatus RegistrationStatus @default(STARTED)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  current_poll_id    Int?
  phoneNumber        String?

  @@map("users")
}

 enum RegistrationStatus {
  STARTED
  COMPLETED
}

enum QuestionDifficulty {
  EASY
  MEDIUM
  HARD
  EXPERT
}

enum UserRole {
  ADMIN
  STUDENT
}
